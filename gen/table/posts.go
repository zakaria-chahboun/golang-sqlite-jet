//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Posts = newPostsTable("", "posts", "")

type postsTable struct {
	sqlite.Table

	//Columns
	ID        sqlite.ColumnString
	Title     sqlite.ColumnString
	Text      sqlite.ColumnString
	CreatedAt sqlite.ColumnTimestamp

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type PostsTable struct {
	postsTable

	EXCLUDED postsTable
}

// AS creates new PostsTable with assigned alias
func (a PostsTable) AS(alias string) *PostsTable {
	return newPostsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PostsTable with assigned schema name
func (a PostsTable) FromSchema(schemaName string) *PostsTable {
	return newPostsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PostsTable with assigned table prefix
func (a PostsTable) WithPrefix(prefix string) *PostsTable {
	return newPostsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PostsTable with assigned table suffix
func (a PostsTable) WithSuffix(suffix string) *PostsTable {
	return newPostsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPostsTable(schemaName, tableName, alias string) *PostsTable {
	return &PostsTable{
		postsTable: newPostsTableImpl(schemaName, tableName, alias),
		EXCLUDED:   newPostsTableImpl("", "excluded", ""),
	}
}

func newPostsTableImpl(schemaName, tableName, alias string) postsTable {
	var (
		IDColumn        = sqlite.StringColumn("id")
		TitleColumn     = sqlite.StringColumn("title")
		TextColumn      = sqlite.StringColumn("text")
		CreatedAtColumn = sqlite.TimestampColumn("created_at")
		allColumns      = sqlite.ColumnList{IDColumn, TitleColumn, TextColumn, CreatedAtColumn}
		mutableColumns  = sqlite.ColumnList{TitleColumn, TextColumn, CreatedAtColumn}
	)

	return postsTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		Title:     TitleColumn,
		Text:      TextColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
